############################################
#
# Condor config file used by the VO Frontend
#
# This file is generated at each reconfig
# Do not change by hand!
#
############################################

###########################
# Base config values
# obtained from
#  condor_config_val -dump
# at config time.
###########################

# Configuration from machine: fermicloud321.fnal.gov
ABORT_ON_EXCEPTION = false
ACCOUNTANT_HOST =
ACCOUNTANT_LOCAL_DOMAIN =
ActivationTimer = ifThenElse(JobStart =!= UNDEFINED, (time() - JobStart), 0)
ActivityTimer = (time() - EnteredCurrentActivity)
ADD_WINDOWS_FIREWALL_EXCEPTION = true
ADVERTISE_IPV4_FIRST = $(PREFER_IPV4)
ALL_DEBUG =
ALLOW_ADMIN_COMMANDS = true
ALLOW_ADMINISTRATOR = $(CONDOR_HOST)
ALLOW_NEGOTIATOR = $(CONDOR_HOST)
ALLOW_NEGOTIATOR_SCHEDD = $(ALLOW_NEGOTIATOR) $(FLOCK_NEGOTIATOR_HOSTS)
ALLOW_OWNER = $(FULL_HOSTNAME) $(IPV4_ADDRESS) $(IPV6_ADDRESS)
ALLOW_READ = *
ALLOW_READ_COLLECTOR = $(ALLOW_READ) $(FLOCK_FROM)
ALLOW_READ_STARTD = $(ALLOW_READ) $(FLOCK_FROM)
ALLOW_VM_CRUFT = false
ALLOW_WRITE = $(HOSTALLOW_WRITE)
ALLOW_WRITE_COLLECTOR = $(ALLOW_WRITE) $(FLOCK_FROM)
ALLOW_WRITE_STARTD = $(ALLOW_WRITE) $(FLOCK_FROM)
ALWAYS_CLOSE_USERLOG = false
ALWAYS_REUSEADDR = true
ALWAYS_USE_LOCAL_CKPT_SERVER = false
ALWAYS_VM_UNIV_USE_NOBODY = false
ANNEXD = $(SBIN)/condor_annexd
ANNEXD_LOG = $(LOG)/AnnexdLog
ANNEXD_NAME = Annex Daemon@$(FULL_HOSTNAME)
APPEND_RANK =
APPEND_RANK_STANDARD =
APPEND_RANK_VANILLA =
APPEND_REQ_STANDARD =
APPEND_REQ_VANILLA =
APPEND_REQ_VM =
APPEND_REQUIREMENTS =
ARCH = X86_64
AUTO_INCLUDE_SHARED_PORT_IN_DAEMON_LIST = true
BACKFILL_SYSTEM =
BackgroundLoad = 0.3
BASE_CGROUP = htcondor
BATCH_GAHP = $(BIN)/blahpd
BATCH_GAHP_CHECK_STATUS_ATTEMPTS = 5
BENCHMARKS_JOBLIST = mips kflops
BENCHMARKS_KFLOPS_EXECUTABLE = $(LIBEXEC)/condor_kflops
BENCHMARKS_KFLOPS_JOB_LOAD = 1.0
BENCHMARKS_MAX_JOB_LOAD = 1.0
BENCHMARKS_MIPS_EXECUTABLE = $(LIBEXEC)/condor_mips
BENCHMARKS_MIPS_JOB_LOAD = 1.0
BenchmarkTimer = (time() - LastBenchmark)
BigJob = (TARGET.ImageSize >= (50 * 1024))
BIN = $(RELEASE_DIR)/bin
BIND_ALL_INTERFACES = true
BIOTECH =
C_GAHP_DEBUG = D_STATS
C_GAHP_LOCK = /tmp/CGAHPLock.$(USERNAME)
C_GAHP_LOG = /tmp/CGAHPLog.$(USERNAME)
C_GAHP_WORKER_THREAD_LOCK = /tmp/CGAHPWorkerLock.$(USERNAME)
C_GAHP_WORKER_THREAD_LOG = /tmp/CGAHPWorkerLog.$(USERNAME)
CCB_ADDRESS =
CCB_HEARTBEAT_INTERVAL = 300
CCB_POLLING_INTERVAL = 20
CCB_POLLING_MAX_INTERVAL = 600
CCB_POLLING_TIMESLICE = 0.05
CCB_RECONNECT_FILE =
CCB_SERVER_READ_BUFFER = 2048
CCB_SERVER_WRITE_BUFFER = 2048
CCB_SWEEP_INTERVAL = 1200
CERTIFICATE_MAPFILE = /etc/condor/certs/condor_mapfile
CERTIFICATE_MAPFILE_ASSUME_HASH_KEYS = false
CGROUP_MEMORY_LIMIT_POLICY = none
CHECKPOINT_PLATFORM =
CHIRP_DELAYED_UPDATE_MAX_ATTRS = 100
CHIRP_DELAYED_UPDATE_PREFIX = Chirp
CHOWN_JOB_SPOOL_FILES = False
CKPT_PROBE = $(LIBEXEC)/condor_ckpt_probe
CKPT_SERVER = $(SBIN)/condor_ckpt_server
CKPT_SERVER_CHECK_PARENT_INTERVAL = 120
CKPT_SERVER_CLASSAD_FILE =
CKPT_SERVER_CLEAN_INTERVAL = 86400
CKPT_SERVER_DIR =
CKPT_SERVER_HOST =
CKPT_SERVER_HOSTS =
CKPT_SERVER_INTERVAL = 300
CKPT_SERVER_MAX_PROCESSES = 50
CKPT_SERVER_MAX_RESTORE_PROCESSES = 50
CKPT_SERVER_MAX_STORE_PROCESSES = 50
CKPT_SERVER_REPLICATION_LEVEL = 0
CKPT_SERVER_SOCKET_BUFSIZE = 65536
CLAIM_PARTITIONABLE_LEFTOVERS = $(NEGOTIATOR_USE_SLOT_WEIGHTS)
CLAIM_RECYCLING_CONSIDER_LIMITS = true
CLAIM_WORKLIFE = 1200
CLASSAD_ENABLE_USER_HOME = true
CLASSAD_LOG_STRICT_PARSING = true
CLASSAD_USER_LIBS =
CLASSAD_USER_PYTHON_LIB = $(LIBEXEC)/libclassad_python_user.so
CLASSAD_USER_PYTHON_MODULES =
CM_IP_ADDR =
COLLECTOR = $(SBIN)/condor_collector
COLLECTOR.USE_VOMS_ATTRIBUTES = False
COLLECTOR1 = $(COLLECTOR)
COLLECTOR1.COLLECTOR_LOG = $(LOG)/Collector1Log
COLLECTOR10 = $(COLLECTOR)
COLLECTOR10.COLLECTOR_LOG = $(LOG)/Collector10Log
COLLECTOR10_ARGS = -f -local-name COLLECTOR10 -sock collector10
COLLECTOR10_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector10Log"
COLLECTOR11 = $(COLLECTOR)
COLLECTOR11.COLLECTOR_LOG = $(LOG)/Collector11Log
COLLECTOR11_ARGS = -f -local-name COLLECTOR11 -sock collector11
COLLECTOR11_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector11Log"
COLLECTOR12 = $(COLLECTOR)
COLLECTOR12.COLLECTOR_LOG = $(LOG)/Collector12Log
COLLECTOR12_ARGS = -f -local-name COLLECTOR12 -sock collector12
COLLECTOR12_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector12Log"
COLLECTOR13 = $(COLLECTOR)
COLLECTOR13.COLLECTOR_LOG = $(LOG)/Collector13Log
COLLECTOR13_ARGS = -f -local-name COLLECTOR13 -sock collector13
COLLECTOR13_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector13Log"
COLLECTOR14 = $(COLLECTOR)
COLLECTOR14.COLLECTOR_LOG = $(LOG)/Collector14Log
COLLECTOR14_ARGS = -f -local-name COLLECTOR14 -sock collector14
COLLECTOR14_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector14Log"
COLLECTOR15 = $(COLLECTOR)
COLLECTOR15.COLLECTOR_LOG = $(LOG)/Collector15Log
COLLECTOR15_ARGS = -f -local-name COLLECTOR15 -sock collector15
COLLECTOR15_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector15Log"
COLLECTOR16 = $(COLLECTOR)
COLLECTOR16.COLLECTOR_LOG = $(LOG)/Collector16Log
COLLECTOR16_ARGS = -f -local-name COLLECTOR16 -sock collector16
COLLECTOR16_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector16Log"
COLLECTOR17 = $(COLLECTOR)
COLLECTOR17.COLLECTOR_LOG = $(LOG)/Collector17Log
COLLECTOR17_ARGS = -f -local-name COLLECTOR17 -sock collector17
COLLECTOR17_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector17Log"
COLLECTOR18 = $(COLLECTOR)
COLLECTOR18.COLLECTOR_LOG = $(LOG)/Collector18Log
COLLECTOR18_ARGS = -f -local-name COLLECTOR18 -sock collector18
COLLECTOR18_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector18Log"
COLLECTOR19 = $(COLLECTOR)
COLLECTOR19.COLLECTOR_LOG = $(LOG)/Collector19Log
COLLECTOR19_ARGS = -f -local-name COLLECTOR19 -sock collector19
COLLECTOR19_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector19Log"
COLLECTOR1_ARGS = -f -local-name COLLECTOR1 -sock collector1
COLLECTOR1_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector1Log"
COLLECTOR2 = $(COLLECTOR)
COLLECTOR2.COLLECTOR_LOG = $(LOG)/Collector2Log
COLLECTOR20 = $(COLLECTOR)
COLLECTOR20.COLLECTOR_LOG = $(LOG)/Collector20Log
COLLECTOR20_ARGS = -f -local-name COLLECTOR20 -sock collector20
COLLECTOR20_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector20Log"
COLLECTOR21 = $(COLLECTOR)
COLLECTOR21.COLLECTOR_LOG = $(LOG)/Collector21Log
COLLECTOR21_ARGS = -f -local-name COLLECTOR21 -sock collector21
COLLECTOR21_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector21Log"
COLLECTOR22 = $(COLLECTOR)
COLLECTOR22.COLLECTOR_LOG = $(LOG)/Collector22Log
COLLECTOR22_ARGS = -f -local-name COLLECTOR22 -sock collector22
COLLECTOR22_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector22Log"
COLLECTOR23 = $(COLLECTOR)
COLLECTOR23.COLLECTOR_LOG = $(LOG)/Collector23Log
COLLECTOR23_ARGS = -f -local-name COLLECTOR23 -sock collector23
COLLECTOR23_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector23Log"
COLLECTOR24 = $(COLLECTOR)
COLLECTOR24.COLLECTOR_LOG = $(LOG)/Collector24Log
COLLECTOR24_ARGS = -f -local-name COLLECTOR24 -sock collector24
COLLECTOR24_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector24Log"
COLLECTOR25 = $(COLLECTOR)
COLLECTOR25.COLLECTOR_LOG = $(LOG)/Collector25Log
COLLECTOR25_ARGS = -f -local-name COLLECTOR25 -sock collector25
COLLECTOR25_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector25Log"
COLLECTOR26 = $(COLLECTOR)
COLLECTOR26.COLLECTOR_LOG = $(LOG)/Collector26Log
COLLECTOR26_ARGS = -f -local-name COLLECTOR26 -sock collector26
COLLECTOR26_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector26Log"
COLLECTOR27 = $(COLLECTOR)
COLLECTOR27.COLLECTOR_LOG = $(LOG)/Collector27Log
COLLECTOR27_ARGS = -f -local-name COLLECTOR27 -sock collector27
COLLECTOR27_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector27Log"
COLLECTOR28 = $(COLLECTOR)
COLLECTOR28.COLLECTOR_LOG = $(LOG)/Collector28Log
COLLECTOR28_ARGS = -f -local-name COLLECTOR28 -sock collector28
COLLECTOR28_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector28Log"
COLLECTOR29 = $(COLLECTOR)
COLLECTOR29.COLLECTOR_LOG = $(LOG)/Collector29Log
COLLECTOR29_ARGS = -f -local-name COLLECTOR29 -sock collector29
COLLECTOR29_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector29Log"
COLLECTOR2_ARGS = -f -local-name COLLECTOR2 -sock collector2
COLLECTOR2_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector2Log"
COLLECTOR3 = $(COLLECTOR)
COLLECTOR3.COLLECTOR_LOG = $(LOG)/Collector3Log
COLLECTOR30 = $(COLLECTOR)
COLLECTOR30.COLLECTOR_LOG = $(LOG)/Collector30Log
COLLECTOR30_ARGS = -f -local-name COLLECTOR30 -sock collector30
COLLECTOR30_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector30Log"
COLLECTOR31 = $(COLLECTOR)
COLLECTOR31.COLLECTOR_LOG = $(LOG)/Collector31Log
COLLECTOR31_ARGS = -f -local-name COLLECTOR31 -sock collector31
COLLECTOR31_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector31Log"
COLLECTOR32 = $(COLLECTOR)
COLLECTOR32.COLLECTOR_LOG = $(LOG)/Collector32Log
COLLECTOR32_ARGS = -f -local-name COLLECTOR32 -sock collector32
COLLECTOR32_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector32Log"
COLLECTOR33 = $(COLLECTOR)
COLLECTOR33.COLLECTOR_LOG = $(LOG)/Collector33Log
COLLECTOR33_ARGS = -f -local-name COLLECTOR33 -sock collector33
COLLECTOR33_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector33Log"
COLLECTOR34 = $(COLLECTOR)
COLLECTOR34.COLLECTOR_LOG = $(LOG)/Collector34Log
COLLECTOR34_ARGS = -f -local-name COLLECTOR34 -sock collector34
COLLECTOR34_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector34Log"
COLLECTOR35 = $(COLLECTOR)
COLLECTOR35.COLLECTOR_LOG = $(LOG)/Collector35Log
COLLECTOR35_ARGS = -f -local-name COLLECTOR35 -sock collector35
COLLECTOR35_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector35Log"
COLLECTOR36 = $(COLLECTOR)
COLLECTOR36.COLLECTOR_LOG = $(LOG)/Collector36Log
COLLECTOR36_ARGS = -f -local-name COLLECTOR36 -sock collector36
COLLECTOR36_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector36Log"
COLLECTOR37 = $(COLLECTOR)
COLLECTOR37.COLLECTOR_LOG = $(LOG)/Collector37Log
COLLECTOR37_ARGS = -f -local-name COLLECTOR37 -sock collector37
COLLECTOR37_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector37Log"
COLLECTOR38 = $(COLLECTOR)
COLLECTOR38.COLLECTOR_LOG = $(LOG)/Collector38Log
COLLECTOR38_ARGS = -f -local-name COLLECTOR38 -sock collector38
COLLECTOR38_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector38Log"
COLLECTOR39 = $(COLLECTOR)
COLLECTOR39.COLLECTOR_LOG = $(LOG)/Collector39Log
COLLECTOR39_ARGS = -f -local-name COLLECTOR39 -sock collector39
COLLECTOR39_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector39Log"
COLLECTOR3_ARGS = -f -local-name COLLECTOR3 -sock collector3
COLLECTOR3_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector3Log"
COLLECTOR4 = $(COLLECTOR)
COLLECTOR4.COLLECTOR_LOG = $(LOG)/Collector4Log
COLLECTOR40 = $(COLLECTOR)
COLLECTOR40.COLLECTOR_LOG = $(LOG)/Collector40Log
COLLECTOR40_ARGS = -f -local-name COLLECTOR40 -sock collector40
COLLECTOR40_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector40Log"
COLLECTOR4_ARGS = -f -local-name COLLECTOR4 -sock collector4
COLLECTOR4_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector4Log"
COLLECTOR5 = $(COLLECTOR)
COLLECTOR5.COLLECTOR_LOG = $(LOG)/Collector5Log
COLLECTOR5_ARGS = -f -local-name COLLECTOR5 -sock collector5
COLLECTOR5_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector5Log"
COLLECTOR6 = $(COLLECTOR)
COLLECTOR6.COLLECTOR_LOG = $(LOG)/Collector6Log
COLLECTOR6_ARGS = -f -local-name COLLECTOR6 -sock collector6
COLLECTOR6_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector6Log"
COLLECTOR7 = $(COLLECTOR)
COLLECTOR7.COLLECTOR_LOG = $(LOG)/Collector7Log
COLLECTOR7_ARGS = -f -local-name COLLECTOR7 -sock collector7
COLLECTOR7_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector7Log"
COLLECTOR8 = $(COLLECTOR)
COLLECTOR8.COLLECTOR_LOG = $(LOG)/Collector8Log
COLLECTOR8_ARGS = -f -local-name COLLECTOR8 -sock collector8
COLLECTOR8_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector8Log"
COLLECTOR9 = $(COLLECTOR)
COLLECTOR9.COLLECTOR_LOG = $(LOG)/Collector9Log
COLLECTOR9_ARGS = -f -local-name COLLECTOR9 -sock collector9
COLLECTOR9_ENVIRONMENT = "_CONDOR_COLLECTOR_LOG=$(LOG)/Collector9Log"
COLLECTOR_ADDRESS_FILE = $(LOG)/.collector_address
COLLECTOR_DEBUG =
COLLECTOR_DEBUG_WAIT = false
COLLECTOR_ENVIRONMENT =
COLLECTOR_FLAG =
COLLECTOR_HOST = $(CONDOR_HOST):9618
COLLECTOR_HOST_STRING = "$(COLLECTOR_HOST)"
COLLECTOR_LOG = $(LOG)/CollectorLog
COLLECTOR_MAX_FILE_DESCRIPTORS = 20000
COLLECTOR_NAME = frontend_service
COLLECTOR_PLUGIN_PYTHON_MODULES =
COLLECTOR_PORT = 9618
COLLECTOR_REPEAT_STARTD_ADS = 0
COLLECTOR_SOCKET_BUFSIZE = 10000*1024
COLLECTOR_STATS_SWEEP = 14400
COLLECTOR_SUPER_ADDRESS_FILE = $(LOG)/.collector_address.super
COLLECTOR_TCP_SOCKET_BUFSIZE = 128*1024
COLLECTOR_UPDATE_INTERVAL = 900
COLLECTOR_USES_SHARED_PORT = true
COMPRESS_PERIODIC_CKPT = false
COMPRESS_VACATE_CKPT = false
CONCURRENCY_LIMIT_DEFAULT = 2308032
CONDOR_ADMIN = root@$(FULL_HOSTNAME)
CONDOR_BUILD_PLATFORM = X86_64-CentOS_6.10
CONDOR_CREDENTIAL_DIR = /tmp
CONDOR_GAHP = $(SBIN)/condor_c-gahp
CONDOR_GAHP_WORKER = $(SBIN)/condor_c-gahp_worker_thread
CONDOR_GATEKEEPER =
CONDOR_HOST = $(FULL_HOSTNAME)
CONDOR_Q_DASH_BATCH_IS_DEFAULT = true
CONDOR_Q_ONLY_MY_JOBS = true
CONDOR_Q_USE_V3_PROTOCOL = true
CONDOR_SUPPORT_EMAIL =
CONDOR_VERSION = 8.6.12
CONDOR_VIEW_CLASSAD_TYPES =
CONDOR_VIEW_HOST = localhost
CONDORC_ATTRS_TO_COPY =
CondorIsAdmin = false
CONSOLE_DEVICES = mouse, console
ConsoleBusy = (ConsoleIdle  < $(MINUTE))
CONSUMPTION_CPUS = quantize(target.RequestCpus,{1})
CONSUMPTION_DISK = quantize(target.RequestDisk,{1024})
CONSUMPTION_MEMORY = quantize(target.RequestMemory,{128})
CONSUMPTION_POLICY = false
CONTINUE = True
ContinueIdleTime = 5 * $(MINUTE)
CORE_FILE_NAME = core.$(SUBSYSTEM)
COUNT_HYPERTHREAD_CPUS = true
CPUBusy = ($(NonCondorLoadAvg) >= $(HighLoad))
CPUIdle = ($(NonCondorLoadAvg) <= $(BackgroundLoad))
CREAM_GAHP = $(SBIN)/cream_gahp
CREAM_GAHP_WORKER_THREADS = $(GRIDMANAGER_MAX_PENDING_REQUESTS)
CREATE_CORE_FILES = true
CREATE_LOCKS_ON_LOCAL_DISK = true
CRED_MIN_TIME_LEFT = 120
CRED_STORE_DIR = $(LOCAL_DIR)/cred_dir
CRED_SUPER_USERS =
CREDD = $(SBIN)/condor_credd
CREDD_ADDRESS_FILE = $(LOG)/.credd_address
CREDD_ARGS = -p $(CREDD_PORT) -f
CREDD_CACHE_LOCALLY = false
CREDD_DEBUG = D_FULLDEBUG
CREDD_HOST =
CREDD_LOG = $(LOG)/CredLog
CREDD_POLLING_TIMEOUT = 20
CREDD_PORT = 9620
CURB_MATCHMAKING = false
DAEMON_LIST = MASTER,  COLLECTOR, NEGOTIATOR, GANGLIAD,  SCHEDD, SHARED_PORT COLLECTOR1 COLLECTOR2 COLLECTOR3 COLLECTOR4 COLLECTOR5 COLLECTOR6 COLLECTOR7 COLLECTOR8 COLLECTOR9 COLLECTOR10 COLLECTOR11 COLLECTOR12 COLLECTOR13 COLLECTOR14 COLLECTOR15 COLLECTOR16 COLLECTOR17 COLLECTOR18 COLLECTOR19 COLLECTOR20 COLLECTOR21 COLLECTOR22 COLLECTOR23 COLLECTOR24 COLLECTOR25 COLLECTOR26 COLLECTOR27 COLLECTOR28 COLLECTOR29 COLLECTOR30 COLLECTOR31 COLLECTOR32 COLLECTOR33 COLLECTOR34 COLLECTOR35 COLLECTOR36 COLLECTOR37 COLLECTOR38 COLLECTOR39 COLLECTOR40
DAEMON_SOCKET_DIR = auto
DAGMAN_ABORT_DUPLICATES = true
DAGMAN_ABORT_ON_SCARY_SUBMIT = true
DAGMAN_ALLOW_EVENTS = 114
DAGMAN_ALLOW_LOG_ERROR = false
DAGMAN_ALWAYS_RUN_POST = false
DAGMAN_AUTO_RESCUE = true
DAGMAN_CONDOR_RM_EXE = $(BIN)/condor_rm
DAGMAN_CONDOR_SUBMIT_EXE = $(BIN)/condor_submit
DAGMAN_CONFIG_FILE =
DAGMAN_COPY_TO_SPOOL = false
DAGMAN_DEBUG =
DAGMAN_DEBUG_CACHE_ENABLE = false
DAGMAN_DEBUG_CACHE_SIZE = 5*1024*1024
DAGMAN_DEFAULT_NODE_LOG = @(DAG_DIR)/@(DAG_FILE).nodes.log
DAGMAN_DEFAULT_PRIORITY = 0
DAGMAN_GENERATE_SUBDAG_SUBMITS = true
DAGMAN_HOLD_CLAIM_TIME = 20
DAGMAN_INSERT_SUB_FILE =
DAGMAN_LOG_ON_NFS_IS_ERROR = false
DAGMAN_MAX_JOB_HOLDS = 100
DAGMAN_MAX_JOBS_IDLE = 1000
DAGMAN_MAX_JOBS_SUBMITTED = 0
DAGMAN_MAX_POST_SCRIPTS = 20
DAGMAN_MAX_PRE_SCRIPTS = 20
DAGMAN_MAX_RESCUE_NUM = 100
DAGMAN_MAX_SUBMIT_ATTEMPTS = 6
DAGMAN_MAX_SUBMITS_PER_INTERVAL = 5
DAGMAN_MUNGE_NODE_NAMES = true
DAGMAN_ON_EXIT_REMOVE = (ExitSignal =?= 11 || (ExitCode =!= UNDEFINED && ExitCode >=0 && ExitCode <= 2))
DAGMAN_PEGASUS_REPORT_METRICS = $(LIBEXEC)/condor_dagman_metrics_reporter
DAGMAN_PEGASUS_REPORT_TIMEOUT = 100
DAGMAN_PENDING_REPORT_INTERVAL = 600
DAGMAN_PROHIBIT_MULTI_JOBS = false
DAGMAN_REMOVE_NODE_JOBS = true
DAGMAN_RESET_RETRIES_UPON_RESCUE = true
DAGMAN_RETRY_NODE_FIRST = false
DAGMAN_RETRY_SUBMIT_FIRST = true
DAGMAN_STARTUP_CYCLE_DETECT = false
DAGMAN_SUBMIT_DELAY = 0
DAGMAN_SUBMIT_DEPTH_FIRST = false
DAGMAN_SUPPRESS_JOB_LOGS = false
DAGMAN_SUPPRESS_NOTIFICATION = true
DAGMAN_USE_SHARED_PORT = false
DAGMAN_USE_STRICT = 1
DAGMAN_USER_LOG_SCAN_INTERVAL = 5
DAGMAN_VERBOSITY = 3
DAGMAN_WRITE_PARTIAL_RESCUE = true
DATABASE_PURGE_INTERVAL =
DATABASE_REINDEX_INTERVAL =
DBMSD = $(SBIN)/condor_dbmsd
DBMSMANAGER_NAME =
DC_DAEMON_LIST = + $(DAEMON_LIST)
DCSTATISTICS_TIMESPANS = 4m:240 20m:1200 4h:14400
DCSTATISTICS_WINDOW_SECONDS =
DEAD_COLLECTOR_MAX_AVOIDANCE_TIME = 3600
DEBUG_TIME_FORMAT = %m/%d/%y %H:%M:%S
DEDICATED_SCHEDULER_USE_FIFO = true
DEFAULT_DOMAIN_NAME =
DEFAULT_IO_BUFFER_BLOCK_SIZE =
DEFAULT_IO_BUFFER_SIZE =
DEFAULT_JOB_MAX_RETRIES = 10
DEFAULT_MASTER_SHUTDOWN_SCRIPT =
DEFAULT_PRIO_FACTOR = 1000
DEFAULT_RANK =
DEFAULT_RANK_STANDARD =
DEFAULT_RANK_VANILLA =
DEFAULT_UNIVERSE =
DEFRAG = $(LIBEXEC)/condor_defrag
DEFRAG_CANCEL_REQUIREMENTS = $(DEFRAG_WHOLE_MACHINE_EXPR)
DEFRAG_DRAINING_MACHINES_PER_HOUR = 0
DEFRAG_DRAINING_SCHEDULE = graceful
DEFRAG_INTERVAL = 600
DEFRAG_LOG = $(LOG)/DefragLog
DEFRAG_MAX_CONCURRENT_DRAINING = -1
DEFRAG_MAX_WHOLE_MACHINES = -1
DEFRAG_NAME =
DEFRAG_RANK = -ExpectedMachineGracefulDrainingBadput
DEFRAG_REQUIREMENTS = PartitionableSlot && Offline=!=True
DEFRAG_STATE_FILE = $(LOCK)/defrag_state
DEFRAG_UPDATE_INTERVAL = 300
DEFRAG_WHOLE_MACHINE_EXPR = Cpus == TotalCpus && Offline=!=True
DELEGATE_JOB_GSI_CREDENTIALS = true
DELEGATE_JOB_GSI_CREDENTIALS_LIFETIME = 86400
DELEGATE_JOB_GSI_CREDENTIALS_REFRESH = 0.25
DENY_ADMINISTRATOR = anonymous@*
DENY_CLIENT = anonymous@*
DENY_DAEMON = anonymous@*
DENY_NEGOTIATOR = anonymous@*
DENY_WRITE = anonymous@*
DETECTED_CORES = 1
DETECTED_CPUS = 1
DETECTED_MEMORY = 1858
DETECTED_PHYSICAL_CPUS = 1
DISABLE_AUTHENTICATION_IP_CHECK = false
DISCARD_SESSION_KEYRING_ON_STARTUP = true
DISCONNECTED_KEYBOARD_IDLE_BOOST = 1200
DNS_CACHE_REFRESH = 28800
DOCKER = /usr/bin/docker
DOCKER_DROP_ALL_CAPABILITIES = true
DROP_CORE_ON_RECONFIG =
EC2_GAHP = $(SBIN)/ec2_gahp
EC2_GAHP_DEBUG = D_PID
EC2_GAHP_LOG = /tmp/EC2GahpLog.$(USERNAME)
ECRYPTFS_ADD_PASSPHRASE = ecryptfs-add-passphrase
ECRYPTFS_KEY_TIMEOUT = 3600
EMAIL_DOMAIN =
EMAIL_NOTIFICATION_CC =
ENABLE_ADDRESS_REWRITING = true
ENABLE_BACKFILL = false
ENABLE_CHIRP_DELAYED = true
ENABLE_CHIRP_IO = true
ENABLE_CHIRP_UPDATES = true
ENABLE_CLASSAD_CACHING = true
ENABLE_DEPRECATION_WARNINGS = true
ENABLE_GRID_MONITOR = true
ENABLE_HISTORY_ROTATION = true
ENABLE_IPV4 = auto
ENABLE_IPV6 = auto
ENABLE_KERNEL_TUNING = true
ENABLE_PERSISTENT_CONFIG = false
ENABLE_RUNTIME_CONFIG = false
ENABLE_SOAP = false
ENABLE_SOAP_SSL = false
ENABLE_STDOUT_TESTING = false
ENABLE_USERLOG_FSYNC = False
ENABLE_USERLOG_LOCKING = false
ENABLE_VERSIONED_OPSYS = true
ENABLE_WEB_SERVER = false
ENCRYPT_EXECUTE_DIRECTORY = false
ENCRYPT_EXECUTE_DIRECTORY_FILENAMES = false
ENCRYPT_SECRETS = true
ETC = $(RELEASE_DIR)/etc
EVENT_LOG =
EVENT_LOG_COUNT_EVENTS = false
EVENT_LOG_FSYNC = false
EVENT_LOG_JOB_AD_INFORMATION_ATTRS =
EVENT_LOG_LOCKING = false
EVENT_LOG_MAX_ROTATIONS = 1
EVENT_LOG_MAX_SIZE = 1000000
EVENT_LOG_ROTATION_LOCK = $(LOCK)/EventLogLock
EVENT_LOG_USE_XML = false
EXCEPT_ON_ERROR =
EXECUTE = $(LOCAL_DIR)/lib/condor/execute
FILE_LOCK_VIA_MUTEX = true
FILE_TRANSFER_DISK_LOAD_THROTTLE =
FILE_TRANSFER_DISK_LOAD_THROTTLE_LONG_HORIZON = 5m
FILE_TRANSFER_DISK_LOAD_THROTTLE_SHORT_HORIZON = 1m
FILE_TRANSFER_DISK_LOAD_THROTTLE_WAIT_BETWEEN_INCREMENTS = 60
FILESYSTEM_DOMAIN = $(FULL_HOSTNAME)
FILETRANSFER_PLUGINS = $(LIBEXEC)/curl_plugin, $(LIBEXEC)/data_plugin
FLOCK_COLLECTOR_HOSTS = $(FLOCK_TO)
FLOCK_NEGOTIATOR_HOSTS = $(FLOCK_TO)
FS_ALLOW_UNSAFE = false
FS_LOCAL_DIR =
FS_REMOTE_DIR =
FULL_HOSTNAME = fermicloud321.fnal.gov
GAHP =
GAHP_ARGS =
GAHP_DEBUG_HIDE_SENSITIVE_DATA = true
GANGLIA_CONFIG = /etc/ganglia/gmond.conf
GANGLIA_GMETRIC =
GANGLIA_GSTAT_COMMAND = gstat --all --mpifile --gmond_ip=localhost --gmond_port=8649
GANGLIA_LIB =
GANGLIA_LIB64_PATH = /lib64,/usr/lib64,/usr/local/lib64
GANGLIA_LIB_PATH = /lib,/usr/lib,/usr/local/lib
GANGLIA_SEND_DATA_FOR_ALL_HOSTS = True
GANGLIAD = $(LIBEXEC)/condor_gangliad
GANGLIAD_INTERVAL = 60
GANGLIAD_LOG = $(LOG)/GangliadLog
GANGLIAD_METRICS_CONFIG_DIR = /etc/condor/ganglia.d
GANGLIAD_PER_EXECUTE_NODE_METRICS = true
GANGLIAD_REQUIREMENTS = MyType =!= "Machine"
GANGLIAD_VERBOSITY = 0
GCE_GAHP = $(SBIN)/gce_gahp
GCE_GAHP_LOG = /tmp/GceGahpLog.$(USERNAME)
GLITE_LOCATION = $(LIBEXEC)/glite
GLOBAL_JOB_ID_WITH_TIME = true
GRACEFULLY_REMOVE_JOBS = true
GRAM_VERSION_DETECTION = true
GRID_MONITOR = $(SBIN)/grid_monitor
GRID_MONITOR_HEARTBEAT_TIMEOUT = 300
GRID_MONITOR_RETRY_DURATION = 900
GRIDMANAGER = $(SBIN)/condor_gridmanager
GRIDMANAGER_ARGS =
GRIDMANAGER_CONNECT_FAILURE_RETRY_COUNT = 3
GRIDMANAGER_CONNECT_FAILURE_RETRY_INTERVAL = 5
GRIDMANAGER_CONTACT_SCHEDD_DELAY = 5
GRIDMANAGER_DEBUG =
GRIDMANAGER_GAHP_CALL_TIMEOUT_CONDOR = 28800
GRIDMANAGER_GAHP_RESPONSE_TIMEOUT = 20
GRIDMANAGER_GAHPCLIENT_DEBUG = true
GRIDMANAGER_GAHPCLIENT_DEBUG_SIZE = 0
GRIDMANAGER_GLOBUS_COMMIT_TIMEOUT = 600
GRIDMANAGER_JM_EXIT_LIMIT = 30
GRIDMANAGER_LOCK = $(LOCK)/GridmanagerLock.$(USERNAME)
GRIDMANAGER_LOG = $(LOG)/GridmanagerLog.$(USERNAME)
GRIDMANAGER_MAX_JOBMANAGERS_PER_RESOURCE = 10
GRIDMANAGER_MAX_PENDING_REQUESTS = 50
GRIDMANAGER_MAX_PENDING_SUBMITS =
GRIDMANAGER_MAX_PENDING_SUBMITS_PER_RESOURCE =
GRIDMANAGER_MAX_SUBMITTED_JOBS_PER_RESOURCE = 1000
GRIDMANAGER_MAX_SUBMITTED_JOBS_PER_RESOURCE_EC2 = 20
GRIDMANAGER_PER_JOB = false
GRIDMANAGER_PROXY_REFRESH_TIME = 21600
#GRIDMAP =
GRIDSHELL =
GROUP_ACCEPT_SURPLUS = false
GROUP_AUTOREGROUP = false
GROUP_NAMES =
GROUP_QUOTA_MAX_ALLOCATION_ROUNDS = 3
GROUP_QUOTA_ROUND_ROBIN_RATE = 1.0e100
GROUP_SORT_EXPR = ifThenElse(AccountingGroup=?="<none>",3.4e+38,ifThenElse(GroupQuota>0,GroupResourcesInUse/GroupQuota,3.3e+38))
GSI_DAEMON_CERT = /etc/grid-security/hostcert.pem
GSI_DAEMON_DIRECTORY =
GSI_DAEMON_KEY = /etc/grid-security/hostkey.pem
#GSI_DAEMON_NAME =
#GSI_DAEMON_PROXY =
GSI_DAEMON_TRUSTED_CA_DIR = /etc/grid-security/certificates
GSI_SKIP_HOST_CHECK = false
GSI_SKIP_HOST_CHECK_CERT_REGEX =
GSS_ASSIST_GRIDMAP_CACHE_EXPIRATION = 0
GT2_GAHP = $(SBIN)/gahp_server
HA_LOCK_HOLD_TIME =
HA_LOCK_URL =
HA_POLL_PERIOD =
HAD = $(SBIN)/condor_had
HAD_ARGS = -sock $(HAD_SOCKET_NAME)
HAD_CONNECTION_TIMEOUT = 5
HAD_DEBUG =
HAD_LIST =
HAD_LOG = $(LOG)/HADLog
HAD_SOCKET_NAME = had
HAD_STAND_ALONE_DEBUG =
HAD_UPDATE_INTERVAL = 300
HAD_USE_PRIMARY = false
HAD_USE_REPLICATION = false
HAD_USE_SHARED_PORT = false
HAVE_EXT_GLOBUS = 1
HAVE_EXT_KRB5 = 1
HighLoad = 0.5
HISTORY = $(SPOOL)/history
HISTORY_HELPER = $(BIN)/condor_history
HISTORY_HELPER_MAX_CONCURRENCY = 2
HISTORY_HELPER_MAX_HISTORY = 10000
HOSTALLOW_WRITE = *
HOSTNAME = fermicloud321
HOUR = 3600
IGNORE_ATTEMPTS_TO_SET_SECURE_JOB_ATTRS = true
IGNORE_DNS_PROTOCOL_PREFERENCE = $(PREFER_IPV4)
IGNORE_LEAF_OOM = true
IGNORE_NFS_LOCK_ERRORS = false
IGNORE_TARGET_PROTOCOL_PREFERENCE = $(PREFER_IPV4)
IMMUTABLE_JOB_ATTRS =
IN_HIGHPORT =
IN_LOWPORT =
INCLUDE = $(RELEASE_DIR)/include/condor
INTERACTIVE_SUBMIT_FILE = $(LIBEXEC)/interactive.sub
INVALID_LOG_FILES =
IP_ADDRESS = 131.225.154.198
IP_ADDRESS_IS_IPV6 = false
IPV4_ADDRESS = 131.225.154.198
IPV6_ADDRESS = ::1
IS_OWNER = (START =?= False)
IS_VALID_CHECKPOINT_PLATFORM =
IsCollector = false
IsMaster = false
IsMPI = (TARGET.JobUniverse == $(MPI))
IsNegotiator = false
IsSchedd = false
IsShadow = false
IsStandard = (TARGET.JobUniverse == $(STANDARD))
IsStartd = false
IsStarter = false
TOOL.IsTool = true
IsVanilla = (TARGET.JobUniverse == $(VANILLA))
IsVM = (TARGET.JobUniverse == $(VM))
IsWindows = false
JAVA = /usr/bin/java
JAVA_BENCHMARK_TIME = 2
JAVA_CLASSPATH_ARGUMENT = -classpath
JAVA_CLASSPATH_DEFAULT = $(SHARE) $(SHARE)/scimark2lib.jar .
JAVA_CLASSPATH_SEPARATOR = :
JAVA_EXTRA_ARGUMENTS =
JAVA_MAXHEAP_ARGUMENT = -Xmx
JOB_DEFAULT_REQUESTCPUS = 1
JOB_DEFAULT_REQUESTDISK = 1
JOB_DEFAULT_REQUESTMEMORY = 1024
JOB_EXECDIR_PERMISSIONS = user
JOB_GLIDEIN_ATTRS = JOB_Site JOB_GLIDEIN_Entry_Name JOB_GLIDEIN_Name JOB_GLIDEIN_Factory JOB_GLIDEIN_Schedd JOB_GLIDEIN_ClusterId JOB_GLIDEIN_ProcId JOB_GLIDEIN_Site
JOB_GLIDEIN_ClusterId = "$$(GLIDEIN_ClusterId:Unknown)"
JOB_GLIDEIN_Entry_Name = "$$(GLIDEIN_Entry_Name:Unknown)"
JOB_GLIDEIN_Factory = "$$(GLIDEIN_Factory:Unknown)"
JOB_GLIDEIN_Name = "$$(GLIDEIN_Name:Unknown)"
JOB_GLIDEIN_ProcId = "$$(GLIDEIN_ProcId:Unknown)"
JOB_GLIDEIN_Schedd = "$$(GLIDEIN_Schedd:Unknown)"
JOB_GLIDEIN_Site = "$$(GLIDEIN_Site:Unknown)"
JOB_GLIDEIN_SiteWMS = "$$(GLIDEIN_SiteWMS:Unknown)"
JOB_GLIDEIN_SITEWMS_ATTRS = JOB_GLIDEIN_SiteWMS JOB_GLIDEIN_SiteWMS_Slot JOB_GLIDEIN_SiteWMS_JobId JOB_GLIDEIN_SiteWMS_Queue
JOB_GLIDEIN_SiteWMS_JobId = "$$(GLIDEIN_SiteWMS_JobId:Unknown)"
JOB_GLIDEIN_SiteWMS_Queue = "$$(GLIDEIN_SiteWMS_Queue:Unknown)"
JOB_GLIDEIN_SiteWMS_Slot = "$$(GLIDEIN_SiteWMS_Slot:Unknown)"
JOB_INHERITS_STARTER_ENVIRONMENT = false
JOB_PROXY_OVERRIDE_FILE =
JOB_RENICE_INCREMENT = 0
JOB_ROUTER = $(LIBEXEC)/condor_job_router
JOB_ROUTER_DEBUG =
JOB_ROUTER_LOCK = $(LOCK)/$(JOB_ROUTER_NAME)Lock
JOB_ROUTER_LOG = $(LOG)/JobRouterLog
JOB_ROUTER_NAME = jobrouter
JOB_ROUTER_POLLING_PERIOD = 10
JOB_ROUTER_SOURCE_JOB_CONSTRAINT =
JOB_Site = "$$(GLIDEIN_Site:Unknown)"
JOB_SPOOL_PERMISSIONS = user
JOB_START_COUNT = 50
JOB_START_DELAY = 2
JOB_STOP_COUNT = 30
JOB_STOP_DELAY = 1
JobAdInformationAttrs = "$(JOB_GLIDEIN_ATTRS) $(JOB_GLIDEIN_SITEWMS_ATTRS)"
JustCPU = ($(CPUBusy) && ($(KeyboardBusy) == False))
KBDD = $(SBIN)/condor_kbdd
KBDD_ADDRESS_FILE = $(LOG)/.kbdd_address
KBDD_DEBUG =
KBDD_LOG = $(LOG)/KbdLog
KEEP_OUTPUT_SANDBOX = false
KEEP_POOL_HISTORY =
KERBEROS_MAP_FILE =
KERNEL_TUNING_LOG = $(LOG)/KernelTuning.log
KEYBOARD_CPUS = 1
KeyboardBusy = (KeyboardIdle < $(MINUTE))
KeyboardNotBusy = ($(KeyboardBusy) == False)
KILL = False
KILLING_TIMEOUT = 30
LastCkpt = (time() - LastPeriodicCheckpoint)
LIB = $(RELEASE_DIR)/lib64/condor
LIBEXEC = $(RELEASE_DIR)/libexec/condor
LIBVIRT_XML_SCRIPT = $(LIBEXEC)/libvirt_simple_script.awk
LINUX_KERNEL_TUNING_SCRIPT = $(LIBEXEC)/linux_kernel_tuning
#LOCAL_CONFIG_DIR = /etc/condor/config.d
LOCAL_CONFIG_DIR_EXCLUDE_REGEXP = ^((\..*)|(.*\.pl)|(.*\.py)|(.*\.sh)|(.*~)|(#.*)|(.*\.rpmsave)|(.*\.rpmnew)|(.*\.dpkg-old)|(.*\.dpkg-dist)|(.*\.cfsaved))$
#LOCAL_CONFIG_FILE = /etc/condor/condor_config.local
LOCAL_DIR = /var
LOCAL_DISK_LOCK_DIR =
LOCAL_SCHEDD_DIR = /var/lib/condor
LOCAL_UNIV_EXECUTE = $(SPOOL)/local_univ_execute
LOCAL_UNIVERSE_JOB_CLEANUP_RETRY_DELAY = 30
LOCAL_UNIVERSE_MAX_JOB_CLEANUP_RETRIES = 5
LOCALNAME = TOOL
LOCK = $(LOG)
LOCK_DEBUG_LOG_TO_APPEND = false
LOG = $(LOCAL_DIR)/log/condor
LOG_ON_NFS_IS_ERROR = false
LOG_TO_SYSLOG = false
LOGS_USE_TIMESTAMP = false
LOWPORT =
MachineBusy = ($(CPUBusy) || $(KeyboardBusy))
MachineMaxVacateTime = $(MaxVacateTime)
MAIL = /bin/mail
MASTER = $(SBIN)/condor_master
MASTER_ADDRESS_FILE = $(LOG)/.master_address
MASTER_BACKOFF_CEILING = 3600
MASTER_BACKOFF_CONSTANT = 9
MASTER_BACKOFF_FACTOR = 2.0
MASTER_CHECK_NEW_EXEC_INTERVAL = 300
MASTER_DAEMON_AD_FILE =
MASTER_DEBUG =
MASTER_DEBUG_WAIT = false
MASTER_ENVIRONMENT =
MASTER_FLAG =
MASTER_HA_LIST =
MASTER_INSTANCE_LOCK =
MASTER_LOG = $(LOG)/MasterLog
MASTER_NAME =
MASTER_NEW_BINARY_DELAY = 120
MASTER_NEW_BINARY_RESTART = PEACEFUL
MASTER_RECOVER_FACTOR = 300
MASTER_SQLLOG =
MASTER_TIMEOUT_MULTIPLIER = 0
MASTER_UPDATE_INTERVAL = 300
MATCH_TIMEOUT = 120
MAX_ACCOUNTANT_DATABASE_SIZE = 1000000
MAX_C_GAHP_LOG = $(MAX_DEFAULT_LOG)
MAX_CLAIM_ALIVES_MISSED = 6
MAX_COLLECTOR_LOG = $(MAX_DEFAULT_LOG)
MAX_CONCURRENT_DOWNLOADS = 100
MAX_CONCURRENT_UPLOADS = 100
MAX_CREDD_LOG = $(MAX_DEFAULT_LOG)
MAX_DAGMAN_LOG = 0
MAX_DEFAULT_LOG = 10 Mb
MAX_DISCARDED_RUN_TIME = 3600
MAX_GANGLIAD_LOG = $(MAX_DEFAULT_LOG)
MAX_GLOBAL_JOB_PRIOS = 500
MAX_GRIDMANAGER_LOG = $(MAX_DEFAULT_LOG)
MAX_HAD_LOG = $(MAX_DEFAULT_LOG)
MAX_JOB_MIRROR_UPDATE_LAG = 600
MAX_JOB_QUEUE_LOG_ROTATIONS = 1
MAX_JOB_ROUTER_LOG = $(MAX_DEFAULT_LOG)
MAX_JOBS_PER_OWNER = 100000
MAX_JOBS_PER_SUBMISSION = 20000
MAX_JOBS_RUNNING = 6000
MAX_JOBS_SUBMITTED = 2147483647
MAX_KBDD_LOG = $(MAX_DEFAULT_LOG)
MAX_MASTER_LOG = $(MAX_DEFAULT_LOG)
MAX_NEGOTIATOR_LOG = $(MAX_DEFAULT_LOG)
MAX_NEGOTIATOR_MATCH_LOG = $(MAX_DEFAULT_LOG)
MAX_PERIODIC_EXPR_INTERVAL = 1200
MAX_PID_COLLISION_RETRY = 9
MAX_PROCD_LOG = 1000000
MAX_REPLICATION_LOG = $(MAX_DEFAULT_LOG)
MAX_ROOSTER_LOG = $(MAX_DEFAULT_LOG)
MAX_RUNNING_SCHEDULER_JOBS_PER_OWNER =
MAX_SCHEDD_LOG = $(MAX_DEFAULT_LOG)
MAX_SHADOW_EXCEPTIONS = 5
MAX_SHADOW_LOG = 100000000
MAX_SHARED_PORT_LOG = $(MAX_DEFAULT_LOG)
MAX_SLOT_TYPES = 10
MAX_STARTD_LOG = $(MAX_DEFAULT_LOG)
MAX_STARTER_LOG = $(MAX_DEFAULT_LOG)
MAX_TIME_SKIP = 1200
MAX_TRACKING_GID = 0
MAX_TRANSFER_INPUT_MB = -1
MAX_TRANSFER_LIFETIME = 300
MAX_TRANSFER_OUTPUT_MB = -1
MAX_TRANSFERER_LOG = $(MAX_DEFAULT_LOG)
MAX_VIRTUAL_MACHINE_TYPES = 10
MAX_VM_GAHP_LOG = $(MAX_DEFAULT_LOG)
MAX_XML_LOG = 1900000000
MAXJOBRETIREMENTTIME = $(HOUR) * 24 * 7
MaxSuspendTime = 10 * $(MINUTE)
MaxVacateTime = 10 * $(MINUTE)
MediumJob = (TARGET.ImageSize >= (15 * 1024) && TARGET.ImageSize < (50 * 1024))
MEMORY_USAGE_METRIC = ((ResidentSetSize+1023)/1024)
MEMORY_USAGE_METRIC_VM = ((ImageSize+1023)/1024)
MIN_TRACKING_GID = 0
MINUTE = 60
MODIFY_REQUEST_EXPR_REQUESTCPUS = quantize(RequestCpus,{1})
MODIFY_REQUEST_EXPR_REQUESTDISK = quantize(RequestDisk,{1024})
MODIFY_REQUEST_EXPR_REQUESTMEMORY = quantize(RequestMemory,{128})
MOUNT_UNDER_SCRATCH =
MPI = 8
MPI_CONDOR_RSH_PATH =
MPI_MASTER_IP =
MUST_MODIFY_REQUEST_EXPRS = false
NAMED_CHROOT =
NEGOTIATE_ALL_JOBS_IN_CLUSTER =
NEGOTIATION_CYCLE_STATS_LENGTH = 3
NEGOTIATOR = $(SBIN)/condor_negotiator
NEGOTIATOR.USE_VOMS_ATTRIBUTES = False
NEGOTIATOR_ALLOW_QUOTA_OVERSUBSCRIPTION = true
NEGOTIATOR_CONSIDER_EARLY_PREEMPTION = false
NEGOTIATOR_CONSIDER_PREEMPTION = False
NEGOTIATOR_CROSS_SLOT_PRIOS = false
NEGOTIATOR_DEBUG = D_MATCH
NEGOTIATOR_DEBUG_WAIT = false
NEGOTIATOR_DISCOUNT_SUSPENDED_RESOURCES = false
NEGOTIATOR_IGNORE_USER_PRIORITIES = false
NEGOTIATOR_INFORM_STARTD = false
NEGOTIATOR_INTERVAL = 60
NEGOTIATOR_LOG = $(LOG)/NegotiatorLog
NEGOTIATOR_MATCH_EXPRS =
NEGOTIATOR_MATCH_LOG = $(LOG)/MatchLog
NEGOTIATOR_MATCHLIST_CACHING = true
NEGOTIATOR_MAX_TIME_PER_PIESPIN = 20
NEGOTIATOR_MAX_TIME_PER_SCHEDD = 31536000
NEGOTIATOR_MAX_TIME_PER_SUBMITTER = 60
NEGOTIATOR_POST_JOB_RANK = MY.LastHeardFrom
NEGOTIATOR_PRE_JOB_RANK = (10000000 * My.Rank) + (1000000 * (RemoteOwner =?= UNDEFINED)) - (100000 * Cpus) - Memory
NEGOTIATOR_PREFETCH_REQUESTS = false
NEGOTIATOR_PREFETCH_REQUESTS_MAX_TIME = 120
NEGOTIATOR_READ_CONFIG_BEFORE_CYCLE = false
NEGOTIATOR_RESOURCE_REQUEST_LIST_SIZE = 20
NEGOTIATOR_SLOT_CONSTRAINT =
NEGOTIATOR_SLOT_POOLSIZE_CONSTRAINT =
NEGOTIATOR_STATE_FILE =
NEGOTIATOR_TIMEOUT = 30
NEGOTIATOR_TRIM_SHUTDOWN_THRESHOLD = 0
NEGOTIATOR_UPDATE_AFTER_CYCLE = false
NEGOTIATOR_UPDATE_INTERVAL = 300
NEGOTIATOR_USE_NONBLOCKING_STARTD_CONTACT = true
NEGOTIATOR_USE_SLOT_WEIGHTS = true
NEGOTIATOR_USE_WEIGHTED_DEMAND = true
NETWORK_HOSTNAME =
NETWORK_INTERFACE = *
NETWORK_MAX_PENDING_CONNECTS = 0
NICE_USER_PRIO_FACTOR = 1e10
NO_DNS = false
NONBLOCKING_COLLECTOR_UPDATE = true
NonCondorLoadAvg = (LoadAvg - CondorLoadAvg)
NORDUGRID_GAHP = $(SBIN)/nordugrid_gahp
NOT_RESPONDING_TIMEOUT = 3600
NUM_CPUS = $(DETECTED_CPUS)
OBITUARY_LOG_LENGTH = 20
OPENMPI_EXCLUDE_NETWORK_INTERFACES = docker0,virbr0
OPENMPI_INSTALL_PATH = /usr/lib64/openmpi
OPSYS = LINUX
OPSYSANDVER = SL6
OPSYSLEGACY = LINUX
OPSYSLONGNAME = Scientific Linux Fermi release 6.10 (Ramsey)
OPSYSMAJORVER = 6
OPSYSNAME = SL
OPSYSSHORTNAME = SL
OPSYSVER = 610
OUT_HIGHPORT =
OUT_LOWPORT =
PANDA_QUEUE_GRACE = 3
PANDA_QUEUE_SIZE = 131072
PANDA_STATISTICS_LOG = /tmp/pandaStatisticsLog
PANDA_UPDATE_TIMEOUT = 0
PANDAD = $(LIBEXEC)/condor_pandad
PARROT =
PASSWD_CACHE_REFRESH = 72000
PER_JOB_HISTORY_DIR =
PER_JOB_NAMESPACES = true
PERIODIC_CHECKPOINT = ((time() - LastPeriodicCheckpoint)/60.0) > (180.0 + $RANDOM_INTEGER(-30,30,1))
PERIODIC_EXPR_INTERVAL = 60
PERIODIC_EXPR_TIMESLICE = 0.01
PERIODIC_MEMORY_SYNC = false
PERSISTENT_CONFIG_DIR =
PID = 6144
PID_SNAPSHOT_INTERVAL = 15
PIPE_BUFFER_MAX = 10240
PLUGIN_DIR =
PLUGINS =
POLLING_INTERVAL = 5
POLLING_PERIOD =
POOL_HISTORY_DIR =
POOL_HISTORY_MAX_STORAGE = 10000000
POOL_HISTORY_SAMPLING_INTERVAL = 60
PPID = 6139
PREEMPT = False
PREEMPTION_RANK = (RemoteUserPrio * 1000000) - ifThenElse(isUndefined(TotalJobRuntime), 0, TotalJobRuntime)
PREEMPTION_REQUIREMENTS = False
PREEN = $(SBIN)/condor_preen
PREEN_ADMIN =
PREEN_ARGS = -m -r
PREEN_COREFILE_MAX_SIZE = 50000000
PREEN_COREFILE_STALE_AGE = 5184000
PREEN_COREFILES_PER_PROCESS = 10
PREEN_INTERVAL = 86400
PREEN_MAX_SCHEDD_CONNECTION_TIME = 20
PREFER_IPV4 = true
PREFER_OUTBOUND_IPV4 = $(PREFER_IPV4)
PRIORITY_HALFLIFE = 86400
PRIVATE_NETWORK_INTERFACE =
PRIVATE_NETWORK_NAME = $(FULL_HOSTNAME)
PROCD = $(SBIN)/condor_procd
PROCD_ADDRESS = $(RUN)/procd_pipe
PROCD_DEBUG = false
PROCD_LOG = $(LOG)/ProcLog
PROCD_MAX_SNAPSHOT_INTERVAL = 60
PROTECTED_JOB_ATTRS =
PUBLISH_OBITUARIES =
Q_QUERY_TIMEOUT = 20
QUERY_TIMEOUT = 60
QUEUE_ALL_USERS_TRUSTED = false
QUEUE_SUPER_USER_MAY_IMPERSONATE =
QUEUE_SUPER_USERS = root, condor
QUILL = $(SBIN)/condor_quill
QUILL_DB_IP_ADDR =
QUILL_DB_NAME =
QUILL_DB_QUERY_PASSWORD =
QUILL_DB_TYPE = PGSQL
QUILL_DB_USER =
QUILL_DBSIZE_LIMIT =
QUILL_ENABLED = false
QUILL_HISTORY_CLEANING_INTERVAL = 24
QUILL_HISTORY_DURATION = 180
QUILL_IS_REMOTELY_QUERYABLE = true
QUILL_JOB_HISTORY_DURATION =
QUILL_MAINTAIN_DB_CONN = true
QUILL_MAINTAIN_SOFT_STATE = true
QUILL_MANAGE_VACUUM = false
QUILL_NAME =
QUILL_POLLING_PERIOD = 10
QUILL_RESOURCE_HISTORY_DURATION =
QUILL_RUN_HISTORY_DURATION =
QUILL_SHOULD_REINDEX = true
QUILL_USE_SQL_LOG = false
QUILL_USE_TEMP_TABLE = false
REAL_GID = 495
REAL_TIME_JOB_SUSPEND_UPDATES =
REAL_UID = 496
RECEIVE_MSGS_DURATION = 250
RECONNECT_BACKOFF_CEILING = 300
RELEASE_DIR = /usr
REMOTE_GAHP = $(SBIN)/remote_gahp
REMOTE_PRIO_FACTOR = 1e7
REPLICATION = $(SBIN)/condor_replication
REPLICATION_ARGS = -sock $(REPLICATION_SOCKET_NAME)
REPLICATION_DEBUG =
REPLICATION_INTERVAL = 300
REPLICATION_LIST =
REPLICATION_LOG = $(LOG)/ReplicationLog
REPLICATION_SOCKET_NAME = replication
REPLICATION_USE_SHARED_PORT = $(HAD_USE_SHARED_PORT)
REQUIRE_LOCAL_CONFIG_FILE = false
RESERVE_AFS_CACHE = false
RESERVED_SWAP = 0
RESTART_PROCD_ON_ERROR = true
REUSE_CONDOR_RUN_ACCOUNT =
ROOSTER = $(LIBEXEC)/condor_rooster
ROOSTER_DEBUG =
ROOSTER_INTERVAL = 300
ROOSTER_LOG = $(LOG)/RoosterLog
ROOSTER_MAX_UNHIBERNATE = 0
ROOSTER_UNHIBERNATE = Offline && Unhibernate
ROOSTER_UNHIBERNATE_RANK =
ROOSTER_WAKEUP_CMD = "$(BIN)/condor_power -d -i"
RUN = $(LOCAL_DIR)/run/condor
RUN_FILETRANSFER_PLUGINS_WITH_ROOT = false
RunBenchmarks = LastBenchmark == 0
RUNTIME_CONFIG_ADMIN =
SANDBOX_TRANSFER_METHOD =
SBIN = $(RELEASE_DIR)/sbin
SCHED_DEBUG_WAIT = false
SCHED_UNIV_RENICE_INCREMENT = 0
SCHEDD = $(SBIN)/condor_schedd
SCHEDD_ADDRESS_FILE = $(SPOOL)/.schedd_address
SCHEDD_BACKUP_SPOOL =
SCHEDD_CRON_NAME =
SCHEDD_DAEMON_AD_FILE = $(SPOOL)/.schedd_classad
SCHEDD_DEBUG = D_PID
SCHEDD_EXPRS =  SPOOL_DIR_STRING
SCHEDD_INTERVAL =
SCHEDD_JOB_QUEUE_LOG_FLUSH_DELAY = 5
SCHEDD_LOG = $(LOG)/SchedLog
SCHEDD_MAX_FILE_DESCRIPTORS = 4096
SCHEDD_MIN_INTERVAL = 5
SCHEDD_NAME =
SCHEDD_PREEMPTION_RANK =
SCHEDD_PREEMPTION_REQUIREMENTS =
SCHEDD_QUERY_WORKERS = 8
SCHEDD_RESTART_REPORT = $(LOG)/ScheddRestartReport
SCHEDD_ROUND_ATTR_DiskUsage = 25%
SCHEDD_ROUND_ATTR_ExecutableSize = 25%
SCHEDD_ROUND_ATTR_ImageSize = 25%
SCHEDD_ROUND_ATTR_NumCkpts = 4
SCHEDD_ROUND_ATTR_ProportionalSetSizeKb = 25%
SCHEDD_ROUND_ATTR_ResidentSetSize = 25%
SCHEDD_SEND_VACATE_VIA_TCP = true
SCHEDD_SLOT_WEIGHT =
SCHEDD_SUPER_ADDRESS_FILE = $(SPOOL)/.schedd_address.super
SCHEDD_USE_SLOT_WEIGHT = true
SCP =
SEC_CLAIMTOBE_INCLUDE_DOMAIN = false
SEC_CLAIMTOBE_USER =
#SEC_CLIENT_AUTHENTICATION = OPTIONAL
SEC_CLIENT_ENCRYPTION = OPTIONAL
#SEC_CLIENT_INTEGRITY = OPTIONAL
SEC_DAEMON_SESSION_DURATION = 50000
SEC_DEBUG_PRINT_KEYS = false
SEC_DEFAULT_AUTHENTICATION = REQUIRED
SEC_DEFAULT_AUTHENTICATION_METHODS = FS,GSI
SEC_DEFAULT_AUTHENTICATION_TIMEOUT = 20
SEC_DEFAULT_ENCRYPTION = OPTIONAL
SEC_DEFAULT_INTEGRITY = REQUIRED
SEC_ENABLE_MATCH_PASSWORD_AUTHENTICATION = true
SEC_INVALIDATE_SESSIONS_VIA_TCP = true
SEC_PASSWORD_DOMAIN =
SEC_PASSWORD_FILE =
#SEC_READ_AUTHENTICATION = OPTIONAL
SEC_READ_ENCRYPTION = OPTIONAL
#SEC_READ_INTEGRITY = OPTIONAL
SEC_SESSION_DURATION_SLOP = 20
SEC_TCP_SESSION_TIMEOUT = 20
SECURE_JOB_ATTRS =
SENDMAIL = sendmail
SETTABLE_ATTRS_ADMINISTRATOR =
SETTABLE_ATTRS_CONFIG =
SHADOW = $(SBIN)/condor_shadow
SHADOW_ALLOW_UNSAFE_REMOTE_EXEC =
SHADOW_CHECKPROXY_INTERVAL = 600
SHADOW_DEBUG =
SHADOW_DEBUG_WAIT = false
SHADOW_JOB_CLEANUP_RETRY_DELAY = 30
SHADOW_LAZY_QUEUE_UPDATE = true
SHADOW_LIST = SHADOW, SHADOW_STANDARD
SHADOW_LOCK = $(LOCK)/ShadowLock
SHADOW_LOG = $(LOG)/ShadowLog
SHADOW_MAX_JOB_CLEANUP_RETRIES = 5
SHADOW_RENICE_INCREMENT = 0
SHADOW_RUN_UNKNOWN_USER_JOBS = false
SHADOW_SIZE_ESTIMATE = 125
SHADOW_STANDARD = $(SBIN)/condor_shadow.std
SHADOW_STATS_LOG = $(LOG)/XferStatsLog
SHADOW_WORKLIFE = 3600
SHARE = $(RELEASE_DIR)/share/condor
SHARED_PORT = $(LIBEXEC)/condor_shared_port
SHARED_PORT_ADDRESS_REWRITING = false
SHARED_PORT_ARGS = -p 9618
SHARED_PORT_DAEMON_AD_FILE = $(LOG)/shared_port_ad
SHARED_PORT_DEBUG =
SHARED_PORT_DEFAULT_ID =
SHARED_PORT_LOG = $(LOG)/SharedPortLog
SHARED_PORT_MAX_FILE_DESCRIPTORS = 4096
SHARED_PORT_MAX_WORKERS = 1000
SHARED_PORT_PORT = $(COLLECTOR_PORT)
SHUTDOWN_FAST_TIMEOUT = 300
SHUTDOWN_GRACEFUL_TIMEOUT =
SINGULARITY = /usr/bin/singularity
SINGULARITY_IMAGE_EXPR = SingularityImage
SINGULARITY_JOB = false
SLOT_WEIGHT = Cpus
SLOTS_CONNECTED_TO_CONSOLE = $(NUM_CPUS)
SLOTS_CONNECTED_TO_KEYBOARD = $(NUM_CPUS)
SLOW_CKPT_SPEED = 0
SmallJob = (TARGET.ImageSize <  (15 * 1024))
SMTP_SERVER =
SOAP_LEAVE_IN_QUEUE =
SOAP_SSL_CA_DIR =
SOAP_SSL_CA_FILE =
SOAP_SSL_DH_FILE =
SOAP_SSL_PORT = 0
SOAP_SSL_SERVER_KEYFILE =
SOAP_SSL_SERVER_KEYFILE_PASSWORD = 96hoursofmattslife
SOAP_SSL_SKIP_HOST_CHECK = false
SOCKET_LISTEN_BACKLOG = 500
SOFT_UID_DOMAIN =
SPOOL = $(LOCAL_DIR)/lib/condor/spool
SPOOL_DIR_STRING = "$(SPOOL)"
SSH_KEYGEN =
SSH_KEYGEN_ARGS =
SSH_TO_JOB_SSHD_CONFIG_TEMPLATE = /etc/condor/condor_ssh_to_job_sshd_config_template
SSHD =
SSHD_ARGS =
STANDARD = 1
START = True
START_DAEMONS =
START_LOCAL_UNIVERSE = TotalLocalJobsRunning < 200
START_MASTER =
START_SCHEDULER_UNIVERSE = TotalSchedulerJobsRunning < 200
STARTD = $(SBIN)/condor_startd
STARTD_AD_REEVAL_EXPR =
STARTD_ADDRESS_FILE = $(LOG)/.startd_address
STARTD_ATTRS =
STARTD_CLAIM_ID_FILE =
STARTD_COMPUTE_AVAIL_STATS = false
STARTD_CONTACT_TIMEOUT = 45
STARTD_CRON_AUTOPUBLISH =
STARTD_CRON_NAME =
STARTD_DEBUG =
STARTD_FACTORY_SCRIPT_AVAILABLE_PARTITIONS =
STARTD_FACTORY_SCRIPT_BACK_PARTITION =
STARTD_FACTORY_SCRIPT_BOOT_PARTITION =
STARTD_FACTORY_SCRIPT_DESTROY_PARTITION =
STARTD_FACTORY_SCRIPT_GENERATE_PARTITION =
STARTD_FACTORY_SCRIPT_QUERY_WORK_LOADS =
STARTD_FACTORY_SCRIPT_SHUTDOWN_PARTITION =
STARTD_HAS_BAD_UTMP = 0
STARTD_HISTORY = $(LOG)/startd_history
STARTD_JOB_ATTRS =
STARTD_JOB_HOOK_KEYWORD =
STARTD_LOG = $(LOG)/StartLog
STARTD_MAX_AVAIL_PERIOD_SAMPLES = 100
STARTD_NAME =
STARTD_NOCLAIM_SHUTDOWN = 0
STARTD_RECOMPUTE_DISK_FREE = false
STARTD_RESOURCE_PREFIX =
STARTD_SENDS_ALIVES = True
STARTD_SHOULD_WRITE_CLAIM_ID_FILE = true
STARTD_SLOT_ATTRS =
STARTD_SLOT_EXPRS =
STARTER = $(SBIN)/condor_starter
STARTER_CHOOSES_CKPT_SERVER =
STARTER_DEBUG = D_PID
STARTER_DEBUG_WAIT = false
STARTER_HANDLES_ALIVES = true
STARTER_INITIAL_UPDATE_INTERVAL = 8
STARTER_JOB_ENVIRONMENT =
STARTER_JOB_HOOK_KEYWORD =
STARTER_LIST = STARTER, STARTER_STANDARD
STARTER_LOCAL = $(SBIN)/condor_starter
STARTER_LOCAL_LOGGING =
STARTER_LOG = $(LOG)/StarterLog
STARTER_LOG_NAME_APPEND =
STARTER_RLIMIT_AS = 0
STARTER_STANDARD = $(SBIN)/condor_starter.std
STARTER_STATS_LOG = $(LOG)/XferStatsLog
STARTER_UPLOAD_TIMEOUT = 300
StartIdleTime = 15 * $(MINUTE)
StateTimer = (time() - EnteredCurrentState)
STATISTICS_WINDOW_QUANTUM = 240
STATISTICS_WINDOW_QUANTUM_DC =
STATISTICS_WINDOW_QUANTUM_SCHEDD =
STATISTICS_WINDOW_SECONDS = 1200
SUBMIT_ATTRS =
SUBMIT_EXPRS =  $(JOB_GLIDEIN_ATTRS) $(JOB_GLIDEIN_SITEWMS_ATTRS) JobAdInformationAttrs
SUBMIT_PUBLISH_WINDOWS_OSVERSIONINFO = false
SUBMIT_REQUIREMENT_NAMES =
SUBMIT_SEND_RESCHEDULE = true
SUBMIT_SKIP_FILECHECKS =
SUBSYSTEM = TOOL
SUSPEND = False
SYSAPI_GET_LOADAVG = 1
SYSTEM_IMMUTABLE_JOB_ATTRS = Owner ClusterId ProcId TotalSubmitProcs MyType TargetType
SYSTEM_JOB_MACHINE_ATTRS = Cpus,SlotWeight
SYSTEM_JOB_MACHINE_ATTRS_HISTORY_LENGTH = 1
SYSTEM_PROTECTED_JOB_ATTRS =
SYSTEM_SECURE_JOB_ATTRS = x509userProxySubject x509UserProxyEmail x509UserProxyVOName x509UserProxyFirstFQAN x509UserProxyFQAN
SYSTEM_STARTD_ATTRS = COLLECTOR_HOST_STRING DedicatedScheduler
SYSTEM_STARTD_JOB_ATTRS = ImageSize ExecutableSize JobUniverse NiceUser
SYSTEM_STARTD_SLOT_ATTRS =
SYSTEM_VALID_SPOOL_FILES = job_queue.log, job_queue.log.tmp, history, Accountant.log, Accountantnew.log, local_univ_execute, .quillwritepassword, .pgpass, .schedd_address, .schedd_address.super, .schedd_classad, OfflineLog
TCP_FORWARDING_HOST =
TCP_KEEPALIVE_INTERVAL = 360
TCP_UPDATE_COLLECTORS =
TEMP_DIR =
TILDE = /local/stage1/condor
TMP_DIR =
TOUCH_LOG_INTERVAL = 60
TRANSFER_IO_REPORT_INTERVAL = 10
TRANSFER_IO_REPORT_TIMESPANS = 1m:60 5m:300 1h:3600 1d:86400
TRANSFER_QUEUE_USER_EXPR = strcat("Owner_",Owner)
TRANSFERD =
TRANSFERER = $(LIBEXEC)/condor_transferer
TRANSFERER_DEBUG =
TRANSFERER_LOG = $(LOG)/TransfererLog
TRUNC_COLLECTOR_LOG_ON_OPEN = false
TRUNC_MASTER_LOG_ON_OPEN = false
TRUNC_MATCH_LOG_ON_OPEN = false
TRUNC_NEGOTIATOR_LOG_ON_OPEN = false
TRUNC_SCHED_LOG_ON_OPEN = false
TRUNC_SHADOW_LOG_ON_OPEN = false
TRUNC_STARTER_LOG_ON_OPEN = false
TRUST_UID_DOMAIN =
UID_DOMAIN = $(FULL_HOSTNAME)
UNAME_ARCH = x86_64
UNAME_OPSYS = Linux
UNICORE_GAHP = $(SBIN)/unicore_gahp
UNUSED_CLAIM_TIMEOUT = 600
UPDATE_COLLECTOR_WITH_TCP = true
UPDATE_INTERVAL = 300
UPDATE_SPREAD_TIME = $(UPDATE_COLLECTOR_WITH_TCP:0) ? 0 : 8
UPDATE_VIEW_COLLECTOR_WITH_TCP = false
USE_AFS =
USE_CKPT_SERVER =
USE_CLONE_TO_CREATE_PROCESSES = true
USE_GID_PROCESS_TRACKING = false
USE_GLOBAL_JOB_PRIOS = false
USE_KEYRING_SESSIONS = false
USE_NFS =
USE_PROCD = true
USE_PROCESS_GROUPS = true
USE_RESOURCE_REQUEST_COUNTS = true
USE_SCRIPT_TO_CREATE_CONFIG = false
USE_SHARED_PORT = true
USE_VISIBLE_DESKTOP = false
USER_CONFIG_FILE = user_config
USER_JOB_WRAPPER =
USER_MAPFILE =
USERNAME = frontend
UTSNAME_MACHINE = x86_64
UTSNAME_NODENAME = fermicloud321.fnal.gov
UTSNAME_RELEASE = 2.6.32-754.3.5.el8.x86_64
UTSNAME_SYSNAME = Linux
UTSNAME_VERSION = #1 SMP Tue Aug 14 15:20:19 CDT 2018
VALID_COD_USERS =
VALID_SPOOL_FILES =
VANILLA = 5
VM = 13
VM_GAHP_CONFIG =
VM_GAHP_LOG = $(LOG)/VMGahpLog
VM_GAHP_REQ_TIMEOUT = 300
VM_GAHP_SEND_ALL_CLASSAD = true
VM_GAHP_SERVER = $(SBIN)/condor_vm-gahp
VM_HARDWARE_VT = false
VM_KILLING_TIMEOUT = 60
VM_MAX_MEMORY = 0
VM_MAX_NUMBER =
VM_MEMORY =
VM_NETWORKING = false
VM_NETWORKING_DEFAULT_TYPE =
VM_NETWORKING_MAC_PREFIX =
VM_NETWORKING_TYPE =
VM_RECHECK_INTERVAL = 600
VM_SOFT_SUSPEND = false
VM_STATUS_INTERVAL = 60
VM_STATUS_MAX_ERROR = 5
VM_TYPE =
VM_UNIV_NOBODY_USER =
VMP_HOST_MACHINE =
VMP_VM_LIST =
VMWARE_NETWORKING_TYPE =
VMWARE_PERL =
VMWARE_SCRIPT = $(SBIN)/condor_vm_vmware
WANT_SUSPEND = False
WANT_UDP_COMMAND_SOCKET = true
WANT_VACATE = True
WANT_XML_LOG = false
WARN_ON_UNUSED_SUBMIT_FILE_MACROS =
WEB_ROOT_DIR =
WINDOWS_FIREWALL_FAILURE_RETRY = 2
WINDOWS_RMDIR =
WINDOWS_SOFTKILL =
X_RUNS_HERE =
XAUTHORITY_USERS =
XEN_ALLOW_HARDWARE_VT_SUSPEND = false
XEN_BOOTLOADER =
XEN_BRIDGE_SCRIPT =
XEN_SCRIPT =
# Contributing configuration file(s):
#	/etc/condor/condor_config
#	/etc/condor/config.d/00-restart_peaceful.config
#	/etc/condor/config.d/00_gwms_general.config
#	/etc/condor/config.d/01_gwms_collectors.config
#	/etc/condor/config.d/01_gwms_ganglia.config
#	/etc/condor/config.d/02_gwms_schedds.config
#	/etc/condor/config.d/03_gwms_local.config
#	/etc/condor/config.d/10-batch_gahp_blahp.config
#	/etc/condor/config.d/11_gwms_secondary_collectors.config
#	/etc/condor/config.d/90_gwms_dns.config
#	/etc/condor/condor_config.local

##################################
# Add Frontend specific attributes
##################################

###########################
# Pool collector(s)
###########################
COLLECTOR_HOST = fermicloud321.fnal.gov:9618

###########################
# Authentication settings
############################

# Force GSI authentication
SEC_DEFAULT_AUTHENTICATION_METHODS = GSI
SEC_DEFAULT_AUTHENTICATION = REQUIRED

#################################
# Where to find ID->uid mappings
# (also disable any GRIDMAP)
#################################
# This is a fake file, redefine at runtime
CERTIFICATE_MAPFILE=/var/lib/gwms-frontend/vofrontend/frontend.mapfile

# Specify that we trust anyone but not anonymous
# I.e. we only talk to servers that have
#  a DN mapped in our mapfile
DENY_DEFAULT = anonymous@*
DENY_ADMINISTRATOR = anonymous@*
DENY_NEGOTIATOR = anonymous@*
DENY_CLIENT = anonymous@*
DENY_OWNER = anonymous@*
DENY_READ = anonymous@*
DENY_WRITE = anonymous@*
DENY_DAEMON = anonymous@*
DENY_CONFIG = anonymous@*
DENY_ADVERTISE_MASTER = anonymous@*
DENY_ADVERTISE_STARTD = anonymous@*
DENY_ADVERTISE_SCHEDD = anonymous@*

ALLOW_DEFAULT = *@*
ALLOW_ADMINISTRATOR = *@*
ALLOW_NEGOTIATOR = *@*
ALLOW_CLIENT = *@*
ALLOW_OWNER = *@*
ALLOW_READ = *@*
ALLOW_WRITE = *@*
ALLOW_DAEMON = *@*
ALLOW_CONFIG = *@*
ALLOW_ADVERTISE_MASTER = *@*
ALLOW_ADVERTISE_STARTD = *@*
ALLOW_ADVERTISE_SCHEDD = *@*


# Unset all the tool specifics

# Force integrity
SEC_DEFAULT_INTEGRITY = REQUIRED

######################################################
## If someone tried to use this config to start a master
## make sure it is not used to run any daemons
######################################################
DAEMON_LIST=MASTER
DAEMON_SHUTDOWN=True

######################################################
## If condor is allowed to use VOMS attributes, it will
## map COLLECTOR DN to anonymous. Just disable it.
######################################################
USE_VOMS_ATTRIBUTES = False

######################################################
## Newer versions of Condor will try to enforce hostname
## mapping in the server DN. This does not work for
## pilot DNs. We can safely disable this check since
## we explicitly whitelist all DNs.
######################################################
GSI_SKIP_HOST_CHECK = True

######################################################
## Add GSI DAEMON PROXY based on the frontend config and
## not what is in the condor configs from install
########################################################
GSI_DAEMON_PROXY = /tmp/frontend_proxy
